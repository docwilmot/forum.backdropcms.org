<?php

/**
 * @file
 * Provides additional functions for Backdrop.org discussion forums.
 */


/**
 * Implements hook_autoload_info().
 */
function borg_forum_autoload_info() {
  return array(
    'taxonomy_term_data_handler_field_last_comment' => 'views/taxonomy_term_data_handler_field_last_comment.inc',
  );
}

/**
 * Implements hook_views_api().
 */
function borg_forum_views_api() {
  return array(
    'api' => 3,
    'path' => backdrop_get_path('module', 'borg_forum') . '/views',
  );
}

/**
 * Implements hook_config_info().
 */
function borg_forum_config_info() {
  $prefixes['borg_forum.settings'] = array(
    'label' => t('Borg forum settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Stores last comment timestamps.
 */
function borg_forum_last_comment_timestamp($tid) {
  $cache = &backdrop_static(__FUNCTION__, '');
  if (isset($cache[$tid])) {
    return $cache[$tid];
  }

  $results = db_query('SELECT t.tid AS tid, nc.last_comment_timestamp AS last_comment_timestamp FROM {taxonomy_index} t LEFT JOIN {node_comment_statistics} nc ON t.nid = nc.nid')->fetchAll();

  foreach ($results as $result) {
    $cache[$result->tid] = (isset($result->last_comment_timestamp)) ? $result->last_comment_timestamp : NULL;
  }

  return isset($cache[$tid]) ? $cache[$tid] : '';
}

/**
 * Implements hook_node_view().
 */
function borg_forum_node_view(Node $node, $view_mode, $langcode) {
  if ($node->type == 'forum_topic') {
    $breadcrumb = array();
    $breadcrumb[] = l(t('Home'), NULL);
    $breadcrumb[] = l(t('Forums'), 'forums');
    $field_forums = field_get_items('node', $node, 'field_forums');
    if ($field_forums) {
      $data = reset($field_forums);
      $data = taxonomy_term_load($data['tid']);
      $breadcrumb[] = l($data->name, $data->path['alias']);
    }
    backdrop_set_breadcrumb($breadcrumb);
    
  }
}

/**
 * Implements hook_views_pre_render().
 */
function borg_forum_views_pre_render(&$view) {
  if ($view->name == 'taxonomy_term') {
    $parents = taxonomy_term_load_parents_all($view->args[0]);
    unset($parents[0]);
    $parents = array_reverse($parents);

    $breadcrumb = array();
    $breadcrumb[] = l(t('Home'), NULL);
    $breadcrumb[] = l(t('Forums'), 'forums');
    if ($parents) {
      foreach ($parents as $parent) {
        $breadcrumb[] = l($parent->name, 'forums/' . $parent->tid);
      }
    }
    backdrop_set_breadcrumb($breadcrumb);
  }
  if ($view->name == 'categories') {
    $breadcrumb = array();
    $breadcrumb[] = l(t('Home'), NULL);
    backdrop_set_breadcrumb($breadcrumb);
  }
}

/**
 * Implements hook_block_info().
 */
function borg_forum_block_info() {
  $blocks['branding'] = array(
    'info' => t('Branding'),
    'description' => t('Backdrop CMS logomark and wordmark.'),
  );
  $blocks['new_forum_button'] = array(
    'info' => t('New forum button'),
    'description' => t('New forum button.'),
  );

  return $blocks;
}

/**
 * Implements function hook_block_view().
 */
function borg_forum_block_view($delta = '', $settings = array(), $contexts = array()) {
  $block = array();

  switch ($delta) {
    case 'branding':
      $options = array('attributes' => array('class' => array('site-name')));
      $output = l(t('backdrop forums'), '', $options);

      $uri = backdrop_get_path('module', 'borg_forum') . '/images/logo.png';
      $image = theme('image', array('uri' => $uri, 'alt' => t('Backdrop CMS Logo')));
      $options = array('html' => TRUE, 'attributes' => array('class' => array('logo'), 'title' => t('Backdrop CMS Forums')));
      $output .= l($image, '', $options);

      $block['subject'] = NULL;
      $block['content'] = $output;
      break;
    case 'new_forum_button':
      // This block will be available on taxonomy term pages (forum categories)
      // and also on node pages (forum topics) so we get the $tid to pass it to 
      // the link.
      $tid = NULL;
      if ($item = menu_get_item()) {
        if (isset($item['path']) && $item['path'] == 'taxonomy/term/%') {
          $tid = $item['map'][2];
        }
        elseif ($node = menu_get_object()) {
          if (isset($node->type) && $node->type == 'forum_topic') {
            $forum_field = field_get_items('node', $node, 'field_forums');
            if ($forum_field) {
              $reset = reset($forum_field);
              $tid = $reset['tid'];
            }
          }
        }
      }
      $add_link = 'node/add/forum-topic/' . $tid;
      $destination = array('destination' => $add_link);


      if (user_is_logged_in()) {
        $link = l(t('New topic'), $add_link);
        $output = '<div class ="new-topic"><span>' . $link . '</span></div>';
     }
      else {
        $link = t('<a href="@login">Log in</a> or <a href="@register">register</a> to add new topics', array('@login' => url('user/login', array('query' => $destination)), '@register' => url('user/register', array('query' => $destination))));
        $output = '<div class ="forum-forbidden"><span>' . $link . '</span></div>';
      }

      $block['subject'] = NULL;
      $block['content'] = $output;
      break;
  }

  return $block;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node_form().
 */
function borg_forum_form_node_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['field_forums'])) {
    $langcode = $form['field_forums']['#language'];
    // Make the vocabulary required for 'real' forum-nodes.
    $form['field_forums'][$langcode]['#required'] = TRUE;
    $form['field_forums'][$langcode]['#multiple'] = FALSE;
    if (empty($form['field_forums'][$langcode]['#default_value'])) {
      // If there is no default forum already selected, try to get the forum
      // ID from the URL (e.g., if we are on a page like node/add/forum/2, we
      // expect "2" to be the ID of the forum that was requested).
      $requested_forum_id = arg(3);
      $form['field_forums'][$langcode]['#default_value'] = is_numeric($requested_forum_id) ? $requested_forum_id : '';
    }
  }
}
